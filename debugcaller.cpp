#include "debugcaller.h"
#include "autogenerated/telegramapi.h"
#include "mtproto/dc/dcsessionmanager.h"
#include "config/cache/filecache.h"
#include <QStringList>

DebugCaller::DebugCaller(QObject *parent) : QObject(parent)
{
}

QStringList DebugCaller::methodList()
{
    return QStringList() << "uploadGetFile";
}

void DebugCaller::debugDownload(const QString args)
{
    QStringList arglist = args.split(",");

    if(arglist.length() != 4)
    {
        qDebug("%s, Expected 4 arguments, got %d", __func__, arglist.length());
        return;
    }

    this->debugDownload(arglist[0].toInt(), arglist[1].toLong(NULL, 16), arglist[2].toInt(NULL, 16), arglist[3].toLong(NULL, 16));
}

void DebugCaller::debugDownload(TLInt dcid, TLLong volumeid, TLInt localid, TLLong secret)
{
    FileLocation* filelocation = new FileLocation(this);
    filelocation->setConstructorId(TLTypes::FileLocation);
    filelocation->setVolumeId(volumeid);
    filelocation->setLocalId(localid);
    filelocation->setSecret(secret);
    filelocation->setDcId(dcid);

    FileCache_instance->fileObject(filelocation);
}
